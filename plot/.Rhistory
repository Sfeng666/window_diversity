# def a function for barplotting
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar(df, quote(div_x), wd, para, "X")
breaks <- c(-1, seq(0, 1, by = 0.01))
labels <- seq(0, 1, by = 0.01)
df_cut <- cut(dataset$Minor_AF, breaks = breaks, labels = labels, right = T)
df <- c(0.01,0.02,0.03,0.04)
df_cut <- cut(df, breaks = breaks, labels = labels, right = T)
df_cut
df <- c(0.01,0.015, 0.02,0.03,0.04)
df_cut <- cut(df, breaks = breaks, labels = labels, right = T)
df_cut
df <- c(0, 0.01,0.02,0.03,0.04)
df_cut <- cut(df, breaks = breaks, labels = labels, right = T)
df_cut
df <- c(0, 0.01, 0.015, 0.02,0.03,0.04)
df_cut <- cut(df, breaks = breaks, labels = labels, right = T)
df_cut
df <- c(0, 0.01, 0.015, 0.02, 0.021,0.03,0.04)
df_cut <- cut(df, breaks = breaks, labels = labels, right = T)
df_cut
1 > 0 & 2>1
1 > 0 & 2>=1
df_cut <- cut(df, breaks = breaks, labels = labels, right = F)
df_cut
df
d <- data.frame(c(1,2,3,4,5,6), c(1,3,5,7,9,0))
d
d <- data.frame(c1=c(1,2,3,4,5,6), c2=c(1,3,5,7,9,0))
d
sum(d$c1[d$c1 < 5])
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 0.8)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 1)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 2)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 3)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 5)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 10)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_1"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
plot_bar <- function(df, div, wd, para, contig){
ggplot(data = df, mapping = aes_(x = quote(sample), y = div, fill = quote(group))) + geom_bar(stat = 'identity') +
xlab("Sample") +
ylab("Nucleotide diversity (four-fold synonymous)") +
labs(title = para) +
theme(plot.title = element_text(vjust = -6, hjust = 0.5, size = 10)) +
theme(panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(axis.text = element_text(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.ticks = element_line(colour = "black"))
ggsave(paste(paste(wd, para, sep = "/"), "_", contig, ".pdf", sep = ""))
}
# for test only
wd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity/plot"
dd <- "/Users/siyuansmac/Desktop/PhD research/Suzukii WGS analysis/dataset.nosync/annotation/Refseq/reannotate/syn_diversity"
para <- "mincov_12_mincount_50"
# read the table including divergence
setwd(wd)
df <- data.frame(t(read.delim(file=paste(dd, para, "nucleotide_diversity.txt", sep = "/"), header=F, sep="\t", check.names=FALSE, row.names = c("sample", "Ht_a",
"N_snp_a", "N_site_a", "div_a", "Ht_x", "N_snp_x", "N_site_x", "div_x"))))
df[,-1] <- data.frame(sapply(df[,-1], function(x) as.numeric(as.character(x))))
df$group <- factor(c("European", "European", "European", "Native", "Native", "European", "European", "European", "European",
"Native", "Native", "Native", "American", "American", "Native", "American", "American", "American",
"American", "American", "American", "European", "American", "American", "Native", "European", "Native", "European", "European"),
levels = c("American", "European", "Native"))
df <- df[order(df$group), ]
df$sample <- factor(df$sample, levels = df$sample)
# barplot
plot_bar(df, quote(div_a), wd, para, "auto")
wd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/plot"
dd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/"
para <- "winheter_800_mincov_12_mincount_1"
chr <- "2L"
library(gplots)
setwd(wd)
df <- read.table(file=paste(dd, "/", para, "/", "diversity_", chr, ".txt", sep = ""),
header=T, row.names = 1, sep="\t", check.names=FALSE)
# parameters for test only
wd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/plot"
dd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/results"
para <- "winheter_800_mincov_12_mincount_1"
chr <- "2L"
setwd(wd)
df <- read.table(file=paste(dd, "/", para, "/", "diversity_", chr, ".txt", sep = ""),
header=T, row.names = 1, sep="\t", check.names=FALSE)
head(df)
df <- read.table(file=paste(dd, "/", para, "/", "diversity_", chr, ".txt", sep = ""),
header=T, sep="\t", check.names=FALSE)
head(df)
df_color <- data.frame(sample=colnames(df),
range=factor(c("FR-Run", "European", "European", "Chinese",
"Chinese", "European", "European", "European",
"European", "Japanese", "Japanese", "Chinese",
"American", "American", "Chinese", "American",
"American", "American", "US-Haw", "American",
"BR-Pal", "European", "American", "American",
"Japanese", "European", "Japanese", "European", "European"),
levels = c("US-Haw", "American", "BR-Pal", "FR-Run", "European", "Chinese", "Japanese")))
df_color <- df_color[order(df_color$sample),]
df_color <- df_color[order(df_color$range),]
df_color$range <- as.character(df_color$range)
df_color
mt <- as.matrix(df[df_color$sample, df_color$sample])
mt
# update 10.09.2021: separate island populations from the mainland population ranges, and assign separate color to them
vc_color <- c(rgb(232, 125,	114, maxColorValue = 255), rgb(83, 182,76, maxColorValue = 255), rgb(109, 157, 248, maxColorValue = 255), rgb(109 - 35, 157 + 35, 248, maxColorValue = 255),
rgb(232, 125,	114 + 70, maxColorValue = 255), rgb(232 -50, 125,	114 + 20, maxColorValue = 255), rgb(83 + 70, 182,76, maxColorValue = 255))
names(vc_color) <- c("American", "European", "Chinese", "Japanese", "US-Haw", "BR-Pal","FR-Run")
vc_spcolor <- vc_color[df_color$range]
df_color$color <- vc_spcolor
df_color
which(df)
nrow(df)
plot(df)
plot(df$`FR-Run`, nrow(df))
df$`FR-Run`
plot(df$`FR-Run`, 1:nrow(df))
plot(1:nrow(df), df$`FR-Run`)
plot(1:nrow(df), df$`FR-Run`, color = "red")
plot(1:nrow(df), df$`FR-Run`, col = "red")
sample='FR-Run'
df_color[df_color$sample = sample, color]
df_color[df_color$sample == sample, color]
df_color[df_color$sample == sample, df_color$color]
df_color[df_color$sample == sample]
df_color[df_color$sample == sample, 3]
df_color[df_color$sample == sample, $color]
df_color[df_color$sample == sample, 3]
plot(1:nrow(df), df$sample, col = df_color[df_color$sample == sample, 3], pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "red", pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "red", bg = "red", pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "red", bg = "black", pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = "red", pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = "red", pch = 21, alpha = 0.2)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255, alpha = 0.5), pch = 21, alpha = 0.2)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255, alpha = 0.5), pch = 21)
rgb(232, 125,	114, maxColorValue = 255, alpha = 0.8)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255, alpha = 0.8), pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255, alpha = 1), pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255), pch = 21)
plot(1:nrow(df), df$`FR-Run`, bg = rgb(232, 125,	114, maxColorValue = 255), pch = 21)
plot(1:nrow(df), df$`FR-Run`, bg = rgb(232, 125,	114, maxColorValue = 255), pch = 16)
plot(1:nrow(df), df$`FR-Run`, col = rgb(232, 125,	114, maxColorValue = 255), pch = 16)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255), pch = 16)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255), pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255, alpha = 0.5), pch = 21)
plot(1:nrow(df), df$`FR-Run`, col = "black", bg = rgb(232, 125,	114, maxColorValue = 255), pch = 21)
colnames(df)['FR-Run']
which(colnames(df))
which(colnames(df), 'FR-Run')
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(1:nrow(df), df$sample, col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
else {
points(1:nrow(df), df$sample, col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
df
rownames(df)
colnames(df)
df$`FR-Run`
plot(1:nrow(df), df$sample, col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
sample
plot(1:nrow(df), df$sample, col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
plot(x = 1:nrow(df), y = df$sample, col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
df$sample
df$`sample`
sample
df$sample
sample
df$`sample`
df$"sample
""
which(colnames(df) == sample)
df$1
df[1,]
df[,1]
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21, ylim = 0.5)
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21, ylim = c(0, 0.5))
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21, ylim = c(0, 0.05))
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
chr
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)],
col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21,
ylim = c(0, 0.05), xlab = "Windows", ylab = "Nucleotide Diversity", main = chr)
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
legend(-0.06, 0.82,legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend(legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend(legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend("top-right", legend=names(vc_color),title="Range", cex = 1,
legend("top-right", legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend("top-right", legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend("topright", legend=names(vc_color),title="Range", cex = 1,
fill=vc_color, bty="n", xpd = T)
legend("topright", legend=names(vc_color),title="Range", cex = 0.8,
fill=vc_color, bty="n", xpd = T)
wd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/plot"
dd <- "/Users/siyuansmac/bioinfo/project/suzukii_WGS/genetic_diff/window_diversity/results"
para <- "winheter_800_mincov_12_mincount_1"
chr <- "2L"
# def a function to plot dots for window nucleotide diversity
plot_dot <- function(wd, dd, para, chr) {
## read the table including Fst
setwd(wd)
df <- read.table(file=paste(dd, "/", para, "/", "diversity_", chr, ".txt", sep = ""),
header=T, sep="\t", check.names=FALSE)
df_color <- data.frame(sample=colnames(df),
range=factor(c("FR-Run", "European", "European", "Chinese",
"Chinese", "European", "European", "European",
"European", "Japanese", "Japanese", "Chinese",
"American", "American", "Chinese", "American",
"American", "American", "US-Haw", "American",
"BR-Pal", "European", "American", "American",
"Japanese", "European", "Japanese", "European", "European"),
levels = c("US-Haw", "American", "BR-Pal", "FR-Run", "European", "Chinese", "Japanese")))
df_color <- df_color[order(df_color$sample),]
df_color <- df_color[order(df_color$range),]
df_color$range <- as.character(df_color$range)
# update 10.09.2021: separate island populations from the mainland population ranges, and assign separate color to them
vc_color <- c(rgb(232, 125,	114, maxColorValue = 255), rgb(83, 182,76, maxColorValue = 255), rgb(109, 157, 248, maxColorValue = 255), rgb(109 - 35, 157 + 35, 248, maxColorValue = 255),
rgb(232, 125,	114 + 70, maxColorValue = 255), rgb(232 -50, 125,	114 + 20, maxColorValue = 255), rgb(83 + 70, 182,76, maxColorValue = 255))
names(vc_color) <- c("American", "European", "Chinese", "Japanese", "US-Haw", "BR-Pal","FR-Run")
vc_spcolor <- vc_color[df_color$range]
df_color$color <- vc_spcolor
## plot the dot plot
pdf(file=paste(wd, '/', "diversity_", chr, "_", para, ".pdf", sep = ""))
par(ps = 12, cex = 1, cex.main = 1)
for (sample in colnames(df)) {
if (sample == colnames(df)[1]){
plot(x = 1:nrow(df), y = df[, which(colnames(df) == sample)],
col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21,
ylim = c(0, 0.05), xlab = "Windows", ylab = "Nucleotide Diversity", main = chr)
}
else {
points(x = 1:nrow(df),  y = df[, which(colnames(df) == sample)], col = "black", bg = df_color[df_color$sample == sample, 3], pch = 21)
}
}
legend("topright", legend=names(vc_color),title="Range", cex = 0.8,
fill=vc_color, bty="n", xpd = T)
dev.off()
}
# plot
plot_dot(wd, dd, para, "2L")
